#!/bin/bash

# üöÄ Start - –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∑–∞–ø—É—Å–∫ Claude —Å–µ—Å—Å–∏–∏ –¥–ª—è –ö–ª—ç—Ä

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
cd "$SCRIPT_DIR"

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
PID_FILE="state/claude.pid"
LOCK_FILE="state/start.lock"
LOG_FILE="logs/session_starts.log"
HEALTH_FILE="state/claude_health.txt"

# –°–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p state logs

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
FORCE=false
QUIET=false
CHECK_ONLY=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --force) FORCE=true; shift ;;
        --quiet) QUIET=true; shift ;;
        --check) CHECK_ONLY=true; shift ;;
        *) echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"; exit 1 ;;
    esac
done

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ (–Ω–µ –≤—ã–≤–æ–¥–∏—Ç –≤ quiet —Ä–µ–∂–∏–º–µ)
say() {
    if [ "$QUIET" = false ]; then
        echo -e "$1"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Claude
if ! command -v claude &> /dev/null; then
    say "${RED}‚ùå Claude CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    say ""
    say "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ npm:"
    say "  ${GREEN}npm install -g @anthropic-ai/claude-cli${NC}"
    say ""
    say "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://github.com/anthropics/claude-cli"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
check_process() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if kill -0 "$PID" 2>/dev/null; then
            return 0  # –ü—Ä–æ—Ü–µ—Å—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        else
            rm -f "$PID_FILE"  # –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π PID
        fi
    fi
    return 1  # –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
check_health() {
    # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–æ–º–∞–Ω–¥—É
    if echo "health check" | claude --no-markdown 2>&1 | grep -q "health check"; then
        echo "HEALTHY" > "$HEALTH_FILE"
        return 0
    else
        echo "UNHEALTHY" > "$HEALTH_FILE"
        return 1
    fi
}

# –†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
if [ "$CHECK_ONLY" = true ]; then
    if check_process; then
        PID=$(cat "$PID_FILE")
        START_TIME=$(ps -o lstart= -p "$PID" 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        
        say "${GREEN}‚úÖ Claude —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞${NC}"
        say "   PID: $PID"
        say "   –ó–∞–ø—É—â–µ–Ω–∞: $START_TIME"
        
        if check_health; then
            say "   –ó–¥–æ—Ä–æ–≤—å–µ: ${GREEN}HEALTHY${NC}"
        else
            say "   –ó–¥–æ—Ä–æ–≤—å–µ: ${RED}UNHEALTHY${NC}"
        fi
    else
        say "${YELLOW}‚ö†Ô∏è  Claude —Å–µ—Å—Å–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
    fi
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ lock-—Ñ–∞–π–ª–∞ (–∑–∞—â–∏—Ç–∞ –æ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤)
if [ -f "$LOCK_FILE" ]; then
    say "${YELLOW}‚ö†Ô∏è  –î—Ä—É–≥–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å–∫–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞—ë–º lock-—Ñ–∞–π–ª
echo $$ > "$LOCK_FILE"

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    rm -f "$LOCK_FILE"
}
trap cleanup EXIT

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Claude
stop_claude() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        say "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Claude (PID: $PID)..."
        
        # –°–Ω–∞—á–∞–ª–∞ –º—è–≥–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
        kill -TERM "$PID" 2>/dev/null
        
        # –ñ–¥—ë–º –¥–æ 5 —Å–µ–∫—É–Ω–¥
        for i in {1..5}; do
            if ! kill -0 "$PID" 2>/dev/null; then
                break
            fi
            sleep 1
        done
        
        # –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –∂–∏–≤ - —É–±–∏–≤–∞–µ–º
        if kill -0 "$PID" 2>/dev/null; then
            kill -KILL "$PID" 2>/dev/null
        fi
        
        rm -f "$PID_FILE"
        log "STOP type=manual pid=$PID"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏
if check_process; then
    if [ "$FORCE" = true ]; then
        say "${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é...${NC}"
        stop_claude
    elif [ "$QUIET" = false ]; then
        say "${YELLOW}Claude —É–∂–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        read -p "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å? (y/N) " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            stop_claude
        else
            say "–û—Ç–º–µ–Ω–µ–Ω–æ"
            exit 2
        fi
    else
        # –í quiet —Ä–µ–∂–∏–º–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
        if check_health; then
            # –ó–¥–æ—Ä–æ–≤ - –≤—ã—Ö–æ–¥–∏–º —É—Å–ø–µ—à–Ω–æ
            exit 0
        else
            # –ù–µ–∑–¥–æ—Ä–æ–≤ - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
            stop_claude
        fi
    fi
fi

# –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
say "${GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞—é Claude...${NC}"

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
GREETING='üåü –ü—Ä–∏–≤–µ—Ç! –Ø –ö–ª—ç—Ä, —Ç–≤–æ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫.

–ú–æ–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ /Users/larry/Claude/TG_AGENT_PERSONALITY/CLAUDE.md

–ì–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ. –ö–æ–º–∞–Ω–¥—ã:
  .init - –ø–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  .life - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –∂–∏–∑–Ω—å

? –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥'

# –ó–∞–ø—É—Å–∫–∞–µ–º Claude –≤ —Ñ–æ–Ω–µ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
(
    echo "$GREETING" | claude --no-markdown 2>&1
) &

# –ü–æ–ª—É—á–∞–µ–º PID
CLAUDE_PID=$!

# –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
echo $CLAUDE_PID > "$PID_FILE"

# –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å
sleep 2

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤
if kill -0 "$CLAUDE_PID" 2>/dev/null; then
    say "${GREEN}‚úÖ Claude —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (PID: $CLAUDE_PID)${NC}"
    log "START type=${START_TYPE:-manual} result=success pid=$CLAUDE_PID"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
    if check_health; then
        say "${GREEN}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–æ–π–¥–µ–Ω–∞${NC}"
    else
        say "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞${NC}"
    fi
    
    exit 0
else
    say "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Claude${NC}"
    log "START type=${START_TYPE:-manual} result=failed"
    rm -f "$PID_FILE"
    exit 1
fi